{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"https://github.com/santhalakshminarayana/face-recognition/blob/master/Face_Recognition.ipynb","timestamp":1683962349756}],"gpuType":"T4"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"D7n109-gfKsJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694447782847,"user_tz":-540,"elapsed":24522,"user":{"displayName":"조민진","userId":"10146282544826153090"}},"outputId":"701fae5d-0a4e-4901-9d68-33f911ccf1db"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","metadata":{"id":"feAfj-5Gib9J","outputId":"0bec3bfc-05e0-4e6f-c33d-cfed9c62d705","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694447748614,"user_tz":-540,"elapsed":5,"user":{"displayName":"조민진","userId":"10146282544826153090"}}},"source":["%cd /content/drive/My Drive/Colab Notebooks/Face_Recognition"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["[Errno 2] No such file or directory: '/content/drive/My Drive/Colab Notebooks/Face_Recognition'\n","/content\n"]}]},{"cell_type":"code","metadata":{"id":"a9oEs4j1ivxk","executionInfo":{"status":"ok","timestamp":1694447748614,"user_tz":-540,"elapsed":4,"user":{"displayName":"조민진","userId":"10146282544826153090"}}},"source":["path='/content/drive/MyDrive/Colab Notebooks/Face_Recognition'"],"execution_count":2,"outputs":[]},{"cell_type":"code","source":["%cd $path"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NnHPz3XwKswB","executionInfo":{"status":"ok","timestamp":1694447748614,"user_tz":-540,"elapsed":3,"user":{"displayName":"조민진","userId":"10146282544826153090"}},"outputId":"7603d3a6-8192-4695-8ed7-f1054f6255bc"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["[Errno 2] No such file or directory: '/content/drive/MyDrive/Colab Notebooks/Face_Recognition'\n","/content\n"]}]},{"cell_type":"code","metadata":{"id":"8WTJ__FHi4mY","executionInfo":{"status":"ok","timestamp":1694447748615,"user_tz":-540,"elapsed":3,"user":{"displayName":"조민진","userId":"10146282544826153090"}}},"source":["import os\n","import glob"],"execution_count":4,"outputs":[]},{"cell_type":"code","source":["\n","\n","# 파일이 들어있는 폴더 경로 설정\n","folder_path = '/content/drive/MyDrive/Colab Notebooks/Face_Recognition/Images'\n","\n","# 해당 폴더 내의 파일 목록 얻기\n","file_list = os.listdir(folder_path)\n","\n","# 파일 개수 출력\n","file_count = len(file_list)\n","print(f\"{folder_path} 폴더 내에는 {file_count}개의 파일이 있습니다.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8TqmpWXGB-sR","executionInfo":{"status":"ok","timestamp":1694447825844,"user_tz":-540,"elapsed":496,"user":{"displayName":"조민진","userId":"10146282544826153090"}},"outputId":"5633e30c-fc9f-471f-84ce-2c234e94f585"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/Colab Notebooks/Face_Recognition/Images 폴더 내에는 4000개의 파일이 있습니다.\n"]}]},{"cell_type":"code","metadata":{"id":"JbYplJagkWc2","executionInfo":{"status":"ok","timestamp":1694447830161,"user_tz":-540,"elapsed":1061,"user":{"displayName":"조민진","userId":"10146282544826153090"}}},"source":["image_path_names=[]\n","person_names=set()\n","for file_name in glob.glob(path+'/Images/*_[1-10]*.jpg'):\n","  image_path_names.append(file_name)\n","  person_names.add(image_path_names[-1].split('/')[-1].split('_')[0])"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"id":"B0VQO0oRkoKe","outputId":"67a03093-dc53-4f1b-84cc-8881d2d0167e","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694447831758,"user_tz":-540,"elapsed":1,"user":{"displayName":"조민진","userId":"10146282544826153090"}}},"source":["len(image_path_names)"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["800"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","metadata":{"id":"BzJua7rHll-Q","outputId":"c6f2623b-d4de-464e-ffa1-4a91b9ec56d4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694447837145,"user_tz":-540,"elapsed":831,"user":{"displayName":"조민진","userId":"10146282544826153090"}}},"source":["person_names"],"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'aaypn',\n"," 'aeqxm',\n"," 'aheyt',\n"," 'akbdz',\n"," 'amzlp',\n"," 'aplas',\n"," 'aprgu',\n"," 'aqdsd',\n"," 'ascqk',\n"," 'atafo',\n"," 'athnw',\n"," 'avydp',\n"," 'axacq',\n"," 'ayvgx',\n"," 'bagst',\n"," 'bmiek',\n"," 'bmiyx',\n"," 'bmkub',\n"," 'bnuge',\n"," 'bqvhj',\n"," 'brhzs',\n"," 'brpeo',\n"," 'btlpn',\n"," 'bvhvl',\n"," 'bykcg',\n"," 'bzbun',\n"," 'canuu',\n"," 'cbdnt',\n"," 'cbwzp',\n"," 'ccuhw',\n"," 'cdtpr',\n"," 'cdtqb',\n"," 'ceips',\n"," 'cepck',\n"," 'ckqix',\n"," 'clull',\n"," 'cmpdm',\n"," 'cpfps',\n"," 'cpzrq',\n"," 'crbon',\n"," 'csboz',\n"," 'cslpb',\n"," 'ctsjo',\n"," 'cuwnd',\n"," 'cwanl',\n"," 'daijd',\n"," 'dbxop',\n"," 'dcpfw',\n"," 'dfbpo',\n"," 'dfexe',\n"," 'dkijp',\n"," 'dooox',\n"," 'dpyfx',\n"," 'dsgqm',\n"," 'duiqy',\n"," 'dvoay',\n"," 'dzuug',\n"," 'eahhu',\n"," 'ebrxi',\n"," 'ebufk',\n"," 'eccni',\n"," 'ecdsw',\n"," 'ecqnj',\n"," 'ecwsb',\n"," 'edbdt',\n"," 'edseq',\n"," 'eivel',\n"," 'epnqf',\n"," 'epqoj',\n"," 'eseps',\n"," 'eshjd',\n"," 'etlax',\n"," 'etpws',\n"," 'ewgvh',\n"," 'ezdzh',\n"," 'ezwin',\n"," 'fajjt',\n"," 'ffgpe',\n"," 'ffwcj',\n"," 'fibjx',\n"," 'fkidk',\n"," 'flogc',\n"," 'fmwkp',\n"," 'fndol',\n"," 'fofnt',\n"," 'fpjnh',\n"," 'fqbau',\n"," 'frmoq',\n"," 'ftjgb',\n"," 'fuhwi',\n"," 'fvezt',\n"," 'fwbxz',\n"," 'fyboc',\n"," 'fztoh',\n"," 'gdrdv',\n"," 'getvi',\n"," 'ggemi',\n"," 'giawa',\n"," 'givhm',\n"," 'gkhre',\n"," 'gkojj',\n"," 'gkvhj',\n"," 'glwee',\n"," 'gmmmy',\n"," 'gowxx',\n"," 'grarv',\n"," 'grwur',\n"," 'gukvt',\n"," 'guuad',\n"," 'guwma',\n"," 'gvsrk',\n"," 'haabg',\n"," 'havif',\n"," 'hbndy',\n"," 'hehhz',\n"," 'heraf',\n"," 'hfivw',\n"," 'hfvlw',\n"," 'hisuo',\n"," 'hjpau',\n"," 'hmecq',\n"," 'hnfnk',\n"," 'hntfz',\n"," 'hpeyz',\n"," 'hrtld',\n"," 'hvini',\n"," 'hvzrb',\n"," 'hwhww',\n"," 'hxzgl',\n"," 'hyhtr',\n"," 'hyick',\n"," 'hzdlj',\n"," 'iayki',\n"," 'ibhsn',\n"," 'idevg',\n"," 'idttj',\n"," 'ifujb',\n"," 'ifzdo',\n"," 'igxdx',\n"," 'ihkws',\n"," 'iirny',\n"," 'ilixo',\n"," 'ilnpz',\n"," 'ipbro',\n"," 'iqsln',\n"," 'isdap',\n"," 'itdyw',\n"," 'iuymz',\n"," 'ivhkg',\n"," 'iwmja',\n"," 'jbfxm',\n"," 'jbyil',\n"," 'jciqt',\n"," 'jdhqs',\n"," 'jflyu',\n"," 'jfqwb',\n"," 'jgoet',\n"," 'jhijv',\n"," 'jhnaq',\n"," 'jisvs',\n"," 'jkiqn',\n"," 'jmcwm',\n"," 'jpdxp',\n"," 'jqfll',\n"," 'jrcfs',\n"," 'jswdf',\n"," 'jviah',\n"," 'jxsgo',\n"," 'jyodi',\n"," 'jyznq',\n"," 'kbpdm',\n"," 'kdmpi',\n"," 'kfqfs',\n"," 'khjzp',\n"," 'khtxy',\n"," 'kirge',\n"," 'kkwvy',\n"," 'kmowo',\n"," 'knblt',\n"," 'kwten',\n"," 'kwwrt',\n"," 'kxguu',\n"," 'kyhwr',\n"," 'kzdld',\n"," 'laqeu',\n"," 'lceth',\n"," 'lfkte',\n"," 'lgmcc',\n"," 'lhhhz',\n"," 'lkasb',\n"," 'lkbdq',\n"," 'lrkzi',\n"," 'ltujl',\n"," 'lwfcm',\n"," 'lwmmk',\n"," 'lwrkd',\n"," 'lygol',\n"," 'lylvv',\n"," 'maczf',\n"," 'mavur',\n"," 'mdmnu',\n"," 'memrj',\n"," 'mfpos',\n"," 'mfuta',\n"," 'mgerk',\n"," 'mhwlh',\n"," 'micyu',\n"," 'mjdpn',\n"," 'mktrf',\n"," 'mljit',\n"," 'mnvky',\n"," 'mpfoc',\n"," 'muhkz',\n"," 'nahzy',\n"," 'ncgxw',\n"," 'ncsfc',\n"," 'ndstv',\n"," 'nfmds',\n"," 'nfycx',\n"," 'nglct',\n"," 'ngmrv',\n"," 'nmnyh',\n"," 'nnbhc',\n"," 'nqwmj',\n"," 'nqyqw',\n"," 'nsbmn',\n"," 'nsbrc',\n"," 'nsequ',\n"," 'nvkfg',\n"," 'nwkxy',\n"," 'nwlhs',\n"," 'nwryl',\n"," 'nxgwc',\n"," 'nyblc',\n"," 'nzkmu',\n"," 'oacka',\n"," 'obusp',\n"," 'ockfs',\n"," 'ohdmx',\n"," 'oiles',\n"," 'oluzl',\n"," 'omadc',\n"," 'onlfi',\n"," 'oojpn',\n"," 'oqnyb',\n"," 'ospjc',\n"," 'oxrog',\n"," 'pawqn',\n"," 'pbacy',\n"," 'pdqky',\n"," 'petam',\n"," 'pfyfh',\n"," 'plrdu',\n"," 'pntse',\n"," 'popsa',\n"," 'ppmmd',\n"," 'pqojc',\n"," 'pqsyr',\n"," 'prbzg',\n"," 'prkvm',\n"," 'pvena',\n"," 'pvqtv',\n"," 'pwxsw',\n"," 'pydhl',\n"," 'pzdni',\n"," 'pzekq',\n"," 'pzkim',\n"," 'pzmqg',\n"," 'qeksa',\n"," 'qgpjk',\n"," 'qgsxb',\n"," 'qiukt',\n"," 'qjurm',\n"," 'qnbuj',\n"," 'qpdrx',\n"," 'qqiye',\n"," 'qvxop',\n"," 'qwlzb',\n"," 'qwraq',\n"," 'rcbzu',\n"," 'rcosw',\n"," 'rflhb',\n"," 'rhbon',\n"," 'rjvwf',\n"," 'rkssn',\n"," 'rlejn',\n"," 'rloqq',\n"," 'rqdpx',\n"," 'rqoci',\n"," 'rqtwk',\n"," 'ruayb',\n"," 'rurpk',\n"," 'rxgog',\n"," 'schij',\n"," 'scmxg',\n"," 'sdzcm',\n"," 'sekta',\n"," 'siurq',\n"," 'spltp',\n"," 'spsmn',\n"," 'supog',\n"," 'swudj',\n"," 'sxbzw',\n"," 'syxhd',\n"," 'szmaq',\n"," 'taxhn',\n"," 'tdwoy',\n"," 'tejgb',\n"," 'tfvbt',\n"," 'thpws',\n"," 'tiggi',\n"," 'tkddg',\n"," 'tkykh',\n"," 'tlpkn',\n"," 'tmdzk',\n"," 'tmvcf',\n"," 'tozjg',\n"," 'ttvmy',\n"," 'ttwlj',\n"," 'tuulq',\n"," 'tvwqp',\n"," 'tycki',\n"," 'tyqht',\n"," 'tzhgy',\n"," 'ubifh',\n"," 'ubouv',\n"," 'ugihp',\n"," 'ugupg',\n"," 'uibvq',\n"," 'uizwk',\n"," 'ujjdd',\n"," 'umpug',\n"," 'unopp',\n"," 'uqjuq',\n"," 'usczw',\n"," 'uwooh',\n"," 'vfjew',\n"," 'vgymf',\n"," 'vheho',\n"," 'vhovr',\n"," 'vjksn',\n"," 'vlojn',\n"," 'vpbxu',\n"," 'vtlzq',\n"," 'vvetv',\n"," 'wgytc',\n"," 'whhzt',\n"," 'whrol',\n"," 'wlize',\n"," 'wnedd',\n"," 'wnpsu',\n"," 'wopal',\n"," 'wscnx',\n"," 'wtapg',\n"," 'wuajf',\n"," 'wvrne',\n"," 'wwfng',\n"," 'wwhty',\n"," 'wwnar',\n"," 'wwvnq',\n"," 'xhkhi',\n"," 'xhvta',\n"," 'xjddm',\n"," 'xmcrf',\n"," 'xmmce',\n"," 'xnvod',\n"," 'xouff',\n"," 'xpipd',\n"," 'xpzwj',\n"," 'xqnym',\n"," 'xzwyl',\n"," 'ygkby',\n"," 'ykzzs',\n"," 'ymbks',\n"," 'yqdsx',\n"," 'yrwsi',\n"," 'ytbeu',\n"," 'ytgjf',\n"," 'ywtdk',\n"," 'yzghn',\n"," 'yzivh',\n"," 'zaswl',\n"," 'zavca',\n"," 'zborb',\n"," 'zcgcw',\n"," 'zcnyk',\n"," 'zctsl',\n"," 'zdxqd',\n"," 'zgooy',\n"," 'zgzaz',\n"," 'zjgwz',\n"," 'zjnle',\n"," 'zlqwz',\n"," 'zmajn',\n"," 'zmnxf',\n"," 'znuix',\n"," 'zpajy',\n"," 'ztgvg',\n"," 'zvtol',\n"," 'zyvwl'}"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","metadata":{"id":"QrvHS5nkO0VX"},"source":["  There are total 60 images containing 10 images per person."]},{"cell_type":"code","metadata":{"id":"MDEOeTvSn09H","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694447848921,"user_tz":-540,"elapsed":2501,"user":{"displayName":"조민진","userId":"10146282544826153090"}},"outputId":"c38d2776-3801-4894-ba31-c14f762c1478"},"source":["# Download Dlib CNN face detector\n","! wget http://dlib.net/files/mmod_human_face_detector.dat.bz2"],"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["--2023-09-11 15:57:25--  http://dlib.net/files/mmod_human_face_detector.dat.bz2\n","Resolving dlib.net (dlib.net)... 107.180.26.78\n","Connecting to dlib.net (dlib.net)|107.180.26.78|:80... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 694709 (678K)\n","Saving to: ‘mmod_human_face_detector.dat.bz2’\n","\n","mmod_human_face_det 100%[===================>] 678.43K   364KB/s    in 1.9s    \n","\n","2023-09-11 15:57:27 (364 KB/s) - ‘mmod_human_face_detector.dat.bz2’ saved [694709/694709]\n","\n"]}]},{"cell_type":"code","metadata":{"id":"8ntLNPejsPU8","executionInfo":{"status":"ok","timestamp":1694447850967,"user_tz":-540,"elapsed":498,"user":{"displayName":"조민진","userId":"10146282544826153090"}}},"source":["!bzip2 -dk mmod_human_face_detector.dat.bz2"],"execution_count":14,"outputs":[]},{"cell_type":"code","metadata":{"id":"ugCOCE_lsTlP","executionInfo":{"status":"ok","timestamp":1694447852513,"user_tz":-540,"elapsed":1,"user":{"displayName":"조민진","userId":"10146282544826153090"}}},"source":["%rm mmod_human_face_detector.dat.bz2"],"execution_count":15,"outputs":[]},{"cell_type":"code","metadata":{"id":"4bRbWm4KlvMU","executionInfo":{"status":"ok","timestamp":1694447855577,"user_tz":-540,"elapsed":1409,"user":{"displayName":"조민진","userId":"10146282544826153090"}}},"source":["import cv2\n","import matplotlib.pyplot as plt\n","import dlib"],"execution_count":16,"outputs":[]},{"cell_type":"code","metadata":{"id":"Vdo0aJNkA_sy","executionInfo":{"status":"ok","timestamp":1694447859010,"user_tz":-540,"elapsed":615,"user":{"displayName":"조민진","userId":"10146282544826153090"}}},"source":["# Load CNN face detector into dlib\n","dnnFaceDetector=dlib.cnn_face_detection_model_v1(\"mmod_human_face_detector.dat\")"],"execution_count":17,"outputs":[]},{"cell_type":"code","metadata":{"id":"21_IVMOgybPU","executionInfo":{"status":"ok","timestamp":1694447859010,"user_tz":-540,"elapsed":1,"user":{"displayName":"조민진","userId":"10146282544826153090"}}},"source":["os.mkdir(path+'/Images_crop/')"],"execution_count":18,"outputs":[]},{"cell_type":"markdown","source":["# 새 섹션"],"metadata":{"id":"ZbtIyZ3g_Ahe"}},{"cell_type":"code","metadata":{"id":"UvnDaqCDIqmL","executionInfo":{"status":"ok","timestamp":1694447864930,"user_tz":-540,"elapsed":1007,"user":{"displayName":"조민진","userId":"10146282544826153090"}}},"source":["# For each person create a separate folder\n","for person in person_names:\n","  os.mkdir(path+'/Images_crop/'+person+'/')"],"execution_count":19,"outputs":[]},{"cell_type":"code","metadata":{"id":"MDUaECnUHp4r","executionInfo":{"status":"error","timestamp":1694483379637,"user_tz":-540,"elapsed":3,"user":{"displayName":"조민진","userId":"10146282544826153090"}},"colab":{"base_uri":"https://localhost:8080/","height":0},"outputId":"bb97c0a7-277f-4e1f-a826-fdf032a4f170"},"source":["# Detect face, crop detected face and save them in corresponding person folder\n","for file_name in image_path_names:\n","  img=cv2.imread(file_name)\n","  gray=cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n","  rects=dnnFaceDetector(gray,1)\n","  left,top,right,bottom=0,0,0,0\n","  for (i,rect) in enumerate(rects):\n","    left=rect.rect.left() #x1\n","    top=rect.rect.top() #y1\n","    right=rect.rect.right() #x2\n","    bottom=rect.rect.bottom() #y2\n","  width=right-left\n","  height=bottom-top\n","  img_crop=img[top:top+height,left:left+width]\n","  img_path=path+'/Images_crop/'+file_name.split('/')[-1].split('_')[0]+'/'+file_name.split('/')[-1]\n","  cv2.imwrite(img_path,img_crop)"],"execution_count":1,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-6004b88d7814>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# Detect face, crop detected face and save them in corresponding person folder\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0;32mfor\u001b[0m \u001b[0mfile_name\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mimage_path_names\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m   \u001b[0mimg\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcv2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mimread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile_name\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m   \u001b[0mgray\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcv2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcvtColor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcv2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mCOLOR_BGR2GRAY\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m   \u001b[0mrects\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdnnFaceDetector\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgray\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'image_path_names' is not defined"]}]},{"cell_type":"code","metadata":{"id":"q0B5EsUzQIIZ"},"source":["# Get Image names for testing\n","test_image_path_names=[]\n","for file_name in glob.glob(path+'/Images_test/*_[123].jpg'):\n","  test_image_path_names.append(file_name)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"KhLxtZuDRD-3"},"source":["len(test_image_path_names)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"q4g5jL7iRWdh"},"source":["For each person 3 images to test in Images_test folder."]},{"cell_type":"code","metadata":{"id":"uXjqG2ZnRFTD"},"source":["os.mkdir(path+'/Test_Images_crop/')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ff0ekPxwRwWG"},"source":["# Create Separate folder for each person in \"Test_Images_crop\" folder\n","for person in person_names:\n","  os.mkdir(path+'/Test_Images_crop/'+person+'/')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"-kjc0zokR12L"},"source":["# Detect face,crop face and save in corresponding folder\n","for file_name in test_image_path_names:\n","  img=cv2.imread(file_name)\n","  gray=cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n","  rects=dnnFaceDetector(gray,1)\n","  left,top,right,bottom=0,0,0,0\n","  for (i,rect) in enumerate(rects):\n","    left=rect.rect.left() #x1\n","    top=rect.rect.top() #y1\n","    right=rect.rect.right() #x2\n","    bottom=rect.rect.bottom() #y2\n","  width=right-left\n","  height=bottom-top\n","  img_crop=img[top:top+height,left:left+width]\n","  img_path=path+'/Test_Images_crop/'+file_name.split('/')[-1].split('_')[0]+'/'+file_name.split('/')[-1]\n","  cv2.imwrite(img_path,img_crop)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"zSmSIDhoPNM7"},"source":["<pre>Here images are sorted to corresponding test and train folders of same person\n","Directory structure :\n","|Images /\n","|  |-- (60 images)\n","|Images_crop /\n","|  |--angelamerkel\n","|     |--(10 images)\n","|  |--jinping /\n","|     |--(10 images)\n","|  |--lakshminarayana /\n","|         |--(10 imgaes)\n","|  |--modi / (10 images)\n","|  |--putin / (10 images)\n","|  |--trump / (10 images)\n","|Images_test /\n","|  |-- .. / (18 images)\n","|Images_test_crop /\n","|  |--angelamerkel / (3 images)\n","|  |--jinping / (3 images)\n","|  |--lakshminarayana / (3 imgaes)\n","|  |--modi / (3 images)\n","|  |--putin / (3 images)\n","|Face_Recognition.ipynb\n","|mmod_human_face_detector.dat\n","</pre>"]},{"cell_type":"code","metadata":{"id":"K2vsqwHc4msl"},"source":["! pip install gdown"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"SofaX67Q-b0i"},"source":["#Download pre-trained vgg-face-model-weights as .h5 file\n","! gdown https://drive.google.com/uc?id=1yboiKXgQghW_9k4aYlLOLH1LC_x8RCvn"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Qbuvd_mX-lXD"},"source":["%ls"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qF0i2mrxBTR0"},"source":["! pip install tensorflow"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Rp8xv8XO_JTS"},"source":["import numpy as np\n","import tensorflow as tf\n","from tensorflow import keras\n","from tensorflow.keras.models import Sequential,Model\n","from tensorflow.keras.layers import ZeroPadding2D,Convolution2D,MaxPooling2D\n","from tensorflow.keras.layers import Dense,Dropout,Softmax,Flatten,Activation,BatchNormalization\n","from tensorflow.keras.preprocessing.image import load_img,img_to_array\n","from tensorflow.keras.applications.imagenet_utils import preprocess_input\n","import tensorflow.keras.backend as K"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"x4_j4qVk_Pze"},"source":["#Define VGG_FACE_MODEL architecture\n","model = Sequential()\n","model.add(ZeroPadding2D((1,1),input_shape=(224,224, 3)))\n","model.add(Convolution2D(64, (3, 3), activation='relu'))\n","model.add(ZeroPadding2D((1,1)))\n","model.add(Convolution2D(64, (3, 3), activation='relu'))\n","model.add(MaxPooling2D((2,2), strides=(2,2)))\n","model.add(ZeroPadding2D((1,1)))\n","model.add(Convolution2D(128, (3, 3), activation='relu'))\n","model.add(ZeroPadding2D((1,1)))\n","model.add(Convolution2D(128, (3, 3), activation='relu'))\n","model.add(MaxPooling2D((2,2), strides=(2,2)))\n","model.add(ZeroPadding2D((1,1)))\n","model.add(Convolution2D(256, (3, 3), activation='relu'))\n","model.add(ZeroPadding2D((1,1)))\n","model.add(Convolution2D(256, (3, 3), activation='relu'))\n","model.add(ZeroPadding2D((1,1)))\n","model.add(Convolution2D(256, (3, 3), activation='relu'))\n","model.add(MaxPooling2D((2,2), strides=(2,2)))\n","model.add(ZeroPadding2D((1,1)))\n","model.add(Convolution2D(512, (3, 3), activation='relu'))\n","model.add(ZeroPadding2D((1,1)))\n","model.add(Convolution2D(512, (3, 3), activation='relu'))\n","model.add(ZeroPadding2D((1,1)))\n","model.add(Convolution2D(512, (3, 3), activation='relu'))\n","model.add(MaxPooling2D((2,2), strides=(2,2)))\n","model.add(ZeroPadding2D((1,1)))\n","model.add(Convolution2D(512, (3, 3), activation='relu'))\n","model.add(ZeroPadding2D((1,1)))\n","model.add(Convolution2D(512, (3, 3), activation='relu'))\n","model.add(ZeroPadding2D((1,1)))\n","model.add(Convolution2D(512, (3, 3), activation='relu'))\n","model.add(MaxPooling2D((2,2), strides=(2,2)))\n","model.add(Convolution2D(4096, (7, 7), activation='relu'))\n","model.add(Dropout(0.5))\n","model.add(Convolution2D(4096, (1, 1), activation='relu'))\n","model.add(Dropout(0.5))\n","model.add(Convolution2D(2622, (1, 1)))\n","model.add(Flatten())\n","model.add(Activation('softmax'))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"hQV4WAcvANH0"},"source":["# Load VGG Face model weights\n","model.load_weights('vgg_face_weights.h5')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"u7k9g_wtCUfD"},"source":["model.summary()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"nZ21pD4FDLkT"},"source":["# Remove Last Softmax layer and get model upto last flatten layer with outputs 2622 units\n","vgg_face=Model(inputs=model.layers[0].input,outputs=model.layers[-2].output)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"6zSqFno_Epfz"},"source":["#Prepare Training Data\n","x_train=[]\n","y_train=[]\n","person_folders=os.listdir(path+'/Images_crop/')\n","person_rep=dict()\n","for i,person in enumerate(person_folders):\n","  person_rep[i]=person\n","  image_names=os.listdir('Images_crop/'+person+'/')\n","  for image_name in image_names:\n","    img=load_img(path+'/Images_crop/'+person+'/'+image_name,target_size=(224,224))\n","    img=img_to_array(img)\n","    img=np.expand_dims(img,axis=0)\n","    img=preprocess_input(img)\n","    img_encode=vgg_face(img)\n","    x_train.append(np.squeeze(K.eval(img_encode)).tolist())\n","    y_train.append(i)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"8Cl8ewCNRRCu"},"source":["person_rep"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"QyxgU05lSX4D"},"source":["x_train=np.array(x_train)\n","y_train=np.array(y_train)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"aylVlQO2SZXB"},"source":["#Prepare Test Data\n","x_test=[]\n","y_test=[]\n","person_folders=os.listdir(path+'/Test_Images_crop/')\n","for i,person in enumerate(person_folders):\n","  image_names=os.listdir('Test_Images_crop/'+person+'/')\n","  for image_name in image_names:\n","    img=load_img(path+'/Test_Images_crop/'+person+'/'+image_name,target_size=(224,224))\n","    img=img_to_array(img)\n","    img=np.expand_dims(img,axis=0)\n","    img=preprocess_input(img)\n","    img_encode=vgg_face(img)\n","    x_test.append(np.squeeze(K.eval(img_encode)).tolist())\n","    y_test.append(i)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"C4NNw5lqTuKL"},"source":["x_test=np.array(x_test)\n","y_test=np.array(y_test)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"EAT3ehPVT-24"},"source":["# Save test and train data for later use\n","np.save('train_data',x_train)\n","np.save('train_labels',y_train)\n","np.save('test_data',x_test)\n","np.save('test_labels',y_test)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"sQ5aWACqUnX3"},"source":["# Load saved data\n","x_train=np.load('train_data.npy')\n","y_train=np.load('train_labels.npy')\n","x_test=np.load('test_data.npy')\n","y_test=np.load('test_labels.npy')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"wZOEaNOb0qxD"},"source":["# Softmax regressor to classify images based on encoding\n","classifier_model=Sequential()\n","classifier_model.add(Dense(units=100,input_dim=x_train.shape[1],kernel_initializer='glorot_uniform'))\n","classifier_model.add(BatchNormalization())\n","classifier_model.add(Activation('tanh'))\n","classifier_model.add(Dropout(0.3))\n","classifier_model.add(Dense(units=10,kernel_initializer='glorot_uniform'))\n","classifier_model.add(BatchNormalization())\n","classifier_model.add(Activation('tanh'))\n","classifier_model.add(Dropout(0.2))\n","classifier_model.add(Dense(units=6,kernel_initializer='he_uniform'))\n","classifier_model.add(Activation('softmax'))\n","classifier_model.compile(loss=tf.keras.losses.SparseCategoricalCrossentropy(),optimizer='nadam',metrics=['accuracy'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"fNJsffbD4ulB"},"source":["classifier_model.fit(x_train,y_train,epochs=100,validation_data=(x_test,y_test))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"5BtgAfSo8XW1"},"source":["# Save model for later use\n","tf.keras.models.save_model(classifier_model,'/content/drive/My Drive/Colab Notebooks/Face_Recognition/face_classifier_model.h5')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"3c-QvTzD_Xmf"},"source":["# Load saved model\n","classifier_model=tf.keras.models.load_model('/content/drive/My Drive/Colab Notebooks/Face_Recognition/face_classifier_model.h5')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"I6_DyNnVAHuM"},"source":["# Path to folder which contains images to be tested and predicted\n","test_images_path=path+'/Test_Images_crop/'"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"3aYRHru9AtfM"},"source":["dnnFaceDetector=dlib.cnn_face_detection_model_v1(\"mmod_human_face_detector.dat\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"AJZg7e93Cgu1"},"source":["def plot(img):\n","  plt.figure(figsize=(8,4))\n","  plt.imshow(img[:,:,::-1])\n","  plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"wofuBLTOH7Iu"},"source":["# Label names for class numbers\n","person_rep={0: 'a', 1: 'b', 2: 'c'}"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"0M57Q7chO_Xc"},"source":["os.mkdir(path+'/Predictions')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"oJPEhDUbBHUH"},"source":["for img_name in os.listdir(path+'/Images_test/'):\n","  if img_name=='crop_img.jpg':\n","    continue\n","  # Load Image\n","  img=cv2.imread(path+'/Images_test/'+img_name)\n","  gray=cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n","  # Detect Faces\n","  rects=dnnFaceDetector(gray,1)\n","  left,top,right,bottom=0,0,0,0\n","  for (i,rect) in enumerate(rects):\n","    # Extract Each Face\n","    left=rect.rect.left() #x1\n","    top=rect.rect.top() #y1\n","    right=rect.rect.right() #x2\n","    bottom=rect.rect.bottom() #y2\n","    width=right-left\n","    height=bottom-top\n","    img_crop=img[top:top+height,left:left+width]\n","    cv2.imwrite(path+'/Images_test/crop_img.jpg',img_crop)\n","\n","    # Get Embeddings\n","    crop_img=load_img(path+'/Images_test/crop_img.jpg',target_size=(224,224))\n","    crop_img=img_to_array(crop_img)\n","    crop_img=np.expand_dims(crop_img,axis=0)\n","    crop_img=preprocess_input(crop_img)\n","    img_encode=vgg_face(crop_img)\n","\n","    # Make Predictions\n","    embed=K.eval(img_encode)\n","    person=classifier_model.predict(embed)\n","    name=person_rep[np.argmax(person)]\n","    os.remove(path+'/Images_test/crop_img.jpg')\n","    cv2.rectangle(img,(left,top),(right,bottom),(0,255,0), 2)\n","    img=cv2.putText(img,name,(left,top-10),cv2.FONT_HERSHEY_SIMPLEX,1,(255,0,255),2,cv2.LINE_AA)\n","    img=cv2.putText(img,str(np.max(person)),(right,bottom+10),cv2.FONT_HERSHEY_SIMPLEX,0.5,(0,0,255),1,cv2.LINE_AA)\n","  # Save images with bounding box,name and accuracy\n","  cv2.imwrite(path+'/Predictions/'+img_name,img)\n","  plot(img)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"JzwYUoaAYXkx"},"source":[],"execution_count":null,"outputs":[]}]}